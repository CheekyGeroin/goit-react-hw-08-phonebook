{"version":3,"file":"static/js/112.24a599cc.chunk.js","mappings":"yPAAaA,EAAiB,SAAAC,GAAK,OAAIA,EAAMC,OAAV,EACtBC,EAAe,SAAAF,GAAK,OAAIA,EAAMG,MAAV,E,4BCCpBC,EAAOC,EAAAA,EAAAA,KAAH,8HAOJC,EAAQD,EAAAA,EAAAA,MAAH,2JASLE,EAAQF,EAAAA,EAAAA,MAAH,mEAKLG,EAASH,EAAAA,EAAAA,OAAH,kL,SCdNI,EAAc,WACzB,OAAwBC,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAA4BF,EAAAA,EAAAA,UAAS,IAArC,eAAOG,EAAP,KAAeC,EAAf,KAEMC,GAAWC,EAAAA,EAAAA,IAAYjB,GACvBkB,GAAWC,EAAAA,EAAAA,MAEXC,EAAe,SAAAC,GACnB,MAAwBA,EAAEC,cAAlBV,EAAR,EAAQA,KAAMW,EAAd,EAAcA,MACd,OAAQX,GACN,IAAK,OACHC,EAAQU,GACR,MACF,IAAK,SACHR,EAAUQ,GACV,MACF,QACE,OAEL,EAaKC,EAAQ,WACZX,EAAQ,IACRE,EAAU,GACX,EAED,OACE,UAACV,EAAD,CAAMoB,SAjBe,SAAAJ,GAErB,GADAA,EAAEK,iBACEV,EAASW,MAAMC,MAAK,SAAA1B,GAAO,OAAIA,EAAQU,OAASA,CAArB,IAC7B,OAAOiB,EAAAA,GAAAA,KAAA,UAAcjB,EAAd,4BAGTM,GAASY,EAAAA,EAAAA,IAAW,CAAClB,KAAAA,EAAME,OAAAA,KAE3BU,GACD,EAQC,WACE,UAACjB,EAAD,mBAEE,SAACC,EAAD,CACEuB,KAAK,OACLnB,KAAK,OACLW,MAAOX,EACPoB,QAAQ,yHACRC,MAAM,yIACNC,UAAQ,EACRC,SAAUf,QAGd,UAACb,EAAD,qBAEE,SAACC,EAAD,CACEuB,KAAK,MACLnB,KAAK,SACLW,MAAOT,EACPkB,QAAQ,yFACRC,MAAM,+FACNC,UAAQ,EACRC,SAAUf,QAGd,SAACX,EAAD,CAAQsB,KAAK,SAAb,2BAGL,ECzEYK,EAAO9B,EAAAA,EAAAA,GAAH,uHAQJG,EAASH,EAAAA,EAAAA,OAAH,gPCJN+B,EAAc,WACzB,IAAMrB,GAAWC,EAAAA,EAAAA,IAAYjB,GACvBI,GAASa,EAAAA,EAAAA,IAAYd,GACrBe,GAAWC,EAAAA,EAAAA,OAEjBmB,EAAAA,EAAAA,YAAU,WACRpB,GAASqB,EAAAA,EAAAA,MACV,GAAC,CAACrB,IAEH,IAAMsB,EAAqBpC,EAAOqC,cAC5BC,EAAmB1B,EAASW,MAAMvB,QAAO,SAAAF,GAAO,OACpDA,EAAQU,KAAK6B,cAAcE,SAASH,EADgB,IAQtD,OACE,wBACGE,EAAiBE,KAAI,YAA2B,IAAxBC,EAAuB,EAAvBA,GAAIjC,EAAmB,EAAnBA,KAAME,EAAa,EAAbA,OACjC,OACE,UAACsB,EAAD,WACGxB,EADH,KACWE,GACT,SAAC,EAAD,CACEgC,QAAS,YAXD,SAACD,GACpB3B,GAAS6B,EAAAA,EAAAA,IAAcF,GACxB,CAUcG,CAAYH,EACb,EAHH,sBAFSA,EAWd,KAGN,E,UCxCYtC,EAAQD,EAAAA,EAAAA,MAAH,8GAOLE,EAAQF,EAAAA,EAAAA,MAAH,wFCJL2C,EAAS,WACpB,IAAM7C,GAASa,EAAAA,EAAAA,IAAYd,GACrBe,GAAWC,EAAAA,EAAAA,MAMjB,OACE,UAAC,EAAD,oCAEE,SAAC,EAAD,CAAOY,KAAK,OAAOR,MAAOnB,EAAQ+B,SAPrB,SAAAd,GACfH,GAASgC,EAAAA,EAAAA,GAAe7B,EAAEC,cAAcC,OACzC,MAQF,E,UCXc,SAAS4B,IAGpB,OACI,4BACI,uCACA,SAACzC,EAAD,KAEA,kDACA,SAACuC,EAAD,KACA,SAACZ,EAAD,KAEA,SAAC,KAAD,MAGX,C","sources":["redux/contacts/selectors.js","components/ContactForm/ContactForm.styled.jsx","components/ContactForm/ContactForm.jsx","components/ContactList/ContactList.styled.jsx","components/ContactList/ContactList.jsx","components/Filter/Filter.styled.jsx","components/Filter/Filter.jsx","pages/ContactsPage.jsx"],"sourcesContent":["export const selectContacts = state => state.contact;\nexport const selectFilter = state => state.filter;\n","import styled from '@emotion/styled';\n\nexport const Form = styled.form`\n  box-shadow: 2px 2px 2px 2px #979899;\n  max-width: 300px;\n  padding: 10px;\n  border-radius:10px;\n`;\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  max-width: 200px;\n  font-size: 20px;\n  line-height: 1.3;\n  margin-bottom: 15px;\n`;\n\nexport const Input = styled.input`\n  margin-top: 10px;\n  padding: 5px 10px;\n`;\n\nexport const Button = styled.button`\n  padding: 10px 15px;\n  border-radius: 20px;\n  border: none;\n  cursor: pointer;\n  :hover,\n  :focus {\n    box-shadow: 2px 2px 2px 2px #979899;\n  }\n`;\n","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { toast } from 'react-toastify';\nimport { addContact } from 'redux/contacts/contactOperations';\nimport { selectContacts } from 'redux/contacts/selectors';\nimport 'react-toastify/dist/ReactToastify.css';\n\nimport { Form, Label, Input, Button } from './ContactForm.styled';\n\nexport const ContactForm = () => {\n  const [name, setName] = useState('');\n  const [number, setNumber] = useState('');\n\n  const contacts = useSelector(selectContacts);\n  const dispatch = useDispatch();\n\n  const handleChange = e => {\n    const { name, value } = e.currentTarget;\n    switch (name) {\n      case 'name':\n        setName(value);\n        break;\n      case 'number':\n        setNumber(value);\n        break;\n      default:\n        return;\n    }\n  };\n\n  const collectContact = e => {\n    e.preventDefault();\n    if (contacts.items.find(contact => contact.name === name)) {\n      return toast.warn(`${name} is already in contacts`);\n    }\n\n    dispatch(addContact({name, number}));\n\n    reset();\n  };\n\n  const reset = () => {\n    setName('');\n    setNumber('');\n  };\n\n  return (\n    <Form onSubmit={collectContact}>\n      <Label>\n        Name\n        <Input\n          type=\"text\"\n          name=\"name\"\n          value={name}\n          pattern=\"^[a-zA-Zа-яА-Я]+(([' -][a-zA-Zа-яА-Я ])?[a-zA-Zа-яА-Я]*)*$\"\n          title=\"Name may contain only letters, apostrophe, dash and spaces. For example Adrian, Jacob Mercer, Charles de Batz de Castelmore d'Artagnan\"\n          required\n          onChange={handleChange}\n        />\n      </Label>\n      <Label>\n        Number\n        <Input\n          type=\"tel\"\n          name=\"number\"\n          value={number}\n          pattern=\"\\+?\\d{1,4}?[-.\\s]?\\(?\\d{1,3}?\\)?[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,4}[-.\\s]?\\d{1,9}\"\n          title=\"Phone number must be digits and can contain spaces, dashes, parentheses and can start with +\"\n          required\n          onChange={handleChange}\n        />\n      </Label>\n      <Button type=\"submit\">Add contact</Button>\n    </Form>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Item = styled.li`\n  font-size: 20px;\n  line-height: 1.3;\n  :not(:last-child) {\n    margin-bottom: 15px;\n  }\n`;\n\nexport const Button = styled.button`\n  margin-left: 15px;\n  border-radius: 20px;\n  border: none;\n  padding: 6px 14px;\n  font-size: 16px;\n  line-height: 1.3;\n  cursor: pointer;\n  :hover,\n  :focus {\n    box-shadow: 2px 2px 2px 2px #979899;\n  }\n`;\n","import { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { deleteContact, fetchContacts } from 'redux/contacts/contactOperations';\nimport { selectContacts, selectFilter } from 'redux/contacts/selectors';\nimport { Item, Button } from './ContactList.styled';\n\nexport const ContactList = () => {\n  const contacts = useSelector(selectContacts);\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  useEffect(() => {\n    dispatch(fetchContacts())\n  },[dispatch])\n\n  const normalizedContacts = filter.toLowerCase();\n  const filteredContacts = contacts.items.filter(contact =>\n    contact.name.toLowerCase().includes(normalizedContacts)\n  );\n  \n  const onBtnDelete = (id) => {\n   dispatch(deleteContact(id))\n }\n\n  return (\n    <ul>\n      {filteredContacts.map(({ id, name, number }) => {\n        return (\n          <Item key={id}>\n            {name}: {number}\n            <Button\n              onClick={() => {\n                onBtnDelete(id)\n              }}\n            >\n              Delete\n            </Button>\n          </Item>\n        );\n      })}\n    </ul>\n  );\n};\n","import styled from '@emotion/styled';\n\nexport const Label = styled.label`\n  display: flex;\n  flex-direction: column;\n  font-size: 20px;\n  line-height: 1.3;\n`;\n\nexport const Input = styled.input`\n  max-width: 200px;\n  padding: 5px 10px;\n  margin-top: 10px;\n`;\n","import { useDispatch, useSelector } from 'react-redux';\nimport { filterContacts } from 'redux/contacts/filterSlice';\nimport { selectFilter } from 'redux/contacts/selectors';\nimport { Label, Input } from './Filter.styled';\n\nexport const Filter = () => {\n  const filter = useSelector(selectFilter);\n  const dispatch = useDispatch();\n\n  const onChange = e => {\n    dispatch(filterContacts(e.currentTarget.value));\n  };\n\n  return (\n    <Label>\n      Find contacts by name\n      <Input type=\"text\" value={filter} onChange={onChange} />\n    </Label>\n  );\n};\n","import { ContactForm } from \"components/ContactForm/ContactForm\";\nimport { ContactList } from \"components/ContactList/ContactList\";\nimport { Filter } from \"components/Filter/Filter\";\n// import  Loader from \"components/Loader/Loader\";\n// import { useSelector } from \"react-redux\";\nimport { Outlet } from \"react-router-dom\";\n// import { selectContacts } from \"redux/contacts/selectors\";\n\nexport default function ContactsPage() {\n    // const { isLoading } = useSelector(selectContacts)    \n\n    return (\n        <div>\n            <h1>PhoneBook</h1>\n            <ContactForm />\n\n            <h2>Find contact by name</h2>\n            <Filter />\n            <ContactList/>\n            \n            <Outlet/>\n        </div>\n    )\n}\n\n"],"names":["selectContacts","state","contact","selectFilter","filter","Form","styled","Label","Input","Button","ContactForm","useState","name","setName","number","setNumber","contacts","useSelector","dispatch","useDispatch","handleChange","e","currentTarget","value","reset","onSubmit","preventDefault","items","find","toast","addContact","type","pattern","title","required","onChange","Item","ContactList","useEffect","fetchContacts","normalizedContacts","toLowerCase","filteredContacts","includes","map","id","onClick","deleteContact","onBtnDelete","Filter","filterContacts","ContactsPage"],"sourceRoot":""}